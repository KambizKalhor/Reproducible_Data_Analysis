# Install tidyverse if not installed
if (!requireNamespace("tidyverse", quietly = TRUE)) {
install.packages("tidyverse")
}
# Load the installed packages
library(tidyverse)
data <- read_csv("data/swim.csv")
glimpse(data)
View(data)
swim_data <- read_csv("data/swim.csv")
glimpse(data)
wget https://r4ds.hadley.nz/data-import
data <- read_csv("data/student_raw_data.csv")
glimpse(data)
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>    # Column names should be *syntactic*, meaning they don't contain spaces
mutate(                                                          # Data types (character vs factor vs numeric) should be appropriate.
Student_ID = as.factor(Student_ID),
AGE = as.integer(AGE),
)
# is.na(clean_data)
glimpse(clean_student_data)
student_data
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>    # Column names should be *syntactic*, meaning they don't contain spaces
mutate(                                                          # Data types (character vs factor vs numeric) should be appropriate.
Student_ID = as.factor(Student_ID),
AGE = as.integer(AGE),
)
# is.na(clean_data)
glimpse(clean_student_data)
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate("six" = 6) |>
mutate(                                                                                      # Data types (character vs factor vs numeric) should be appropriate.
Student_ID = as.factor(Student_ID),
AGE = as.integer(AGE),
)
# is.na(clean_data)
glimpse(clean_student_data)
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(B = if_else(row_number() == 3, 6, B))
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate("six" = 6)
print(df_updated)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(ifelse(B == "six"),6)
print(df_updated)
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
df
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(B = if_else(row_number() == 2, 6, B))
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(B = if_else(row_number() == 3, 6, B))
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(B = if_else(row_number() == 1, 6, B))
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(B = if_else(row_number() == 2, 6, B))
df
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(B = if_else(row_number() == 3, 6, B))
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(B = if_else(row_number() == 3, "6", B))
print(df_updated)
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(B = if_else(B == "six", "6", B))
print(df_updated)
# Example dataframe
df <- data.frame(
A = c(1, 2, 3),
B = c("four", "five", "six"),
C = c(7, 8, 9)
)
# Change "six" to 6 in column 2, row 3
df_updated <- df %>%
mutate(B = if_else(B == "five", "50", B))
print(df_updated)
student_data
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(B = if_else(AGE == "five", 5, AGE)) |>
mutate(                                                                                      # Data types (character vs factor vs numeric) should be appropriate.
Student_ID = as.factor(Student_ID),
AGE = as.integer(AGE),
)
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(B = if_else(AGE == "five", "5", AGE)) |>
mutate(                                                                                      # Data types (character vs factor vs numeric) should be appropriate.
Student_ID = as.factor(Student_ID),
AGE = as.integer(AGE),
)
# is.na(clean_data)
glimpse(clean_student_data)
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(B = if_else(AGE == "five", "5", AGE))
# is.na(clean_data)
glimpse(clean_student_data)
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- student_data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(B = if_else(AGE == "five", "5", AGE))
# is.na(clean_data)
glimpse(clean_student_data)
student_data <- read_csv("data/student_raw_data.csv")
student_data
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- student_data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(AGE = if_else(AGE == "five", "5", AGE))
# is.na(clean_data)
glimpse(clean_student_data)
student_data <- read_csv("data/student_raw_data.csv")
View(clean_student_data)
clean_student_data <- student_data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(AGE = if_else(AGE == "five", "5", AGE))
clean_student_data
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- student_data |>
rename(Full_Name = `Full Name`, Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(AGE = if_else(AGE == "five", "5", AGE)) |>
mutate_all(~ ifelse(. == "N/A", NA , .))
# is.na(clean_data)
glimpse(clean_student_data)
glimpse(clean_student_data)
clean_student_data
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- student_data |>
rename(Full_Name = `Full Name`,
Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(AGE = if_else(AGE == "five", "5", AGE)) |>                   # change five to "5", no worries we will change it to integer class later
mutate_all(~ ifelse(. == "N/A", NA , .)) |>                         # find character N/A and change it to NA
mutate(                                                  # Data types (character vs factor vs numeric) should be appropriate.
Student_ID = as.factor(Student_ID),
AGE = as.integer(AGE)
)
# is.na(clean_data)
glimpse(clean_student_data)
clean_student_data
student_data <- read_csv("data/student_raw_data.csv")
clean_student_data <- student_data |>
rename(Full_Name = `Full Name`,
Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(AGE = if_else(AGE == "five", "5", AGE)) |>                   # change five to "5", no worries we will change it to integer class later
mutate_all(~ ifelse(. == "N/A", NA , .)) |>                         # find character N/A and change it to NA
mutate(                                                             # Data types (character vs factor vs numeric) should be appropriate.
Student_ID = as.factor(Student_ID),
AGE = as.integer(AGE)
)
# is.na(clean_data)
print(clean_student_data)
student_data <- read_csv("data/student_raw_data.csv", show_col_types = FALSE)
clean_student_data <- student_data |>
rename(Full_Name = `Full Name`,
Student_ID = `Student ID`) |>                                # Column names should be *syntactic*, meaning they don't contain spaces
mutate(AGE = if_else(AGE == "five", "5", AGE)) |>                   # change five to "5", no worries we will change it to integer class later
mutate_all(~ ifelse(. == "N/A", NA , .)) |>                         # find character N/A and change it to NA
mutate(                                                             # Data types (character vs factor vs numeric) should be appropriate.
Student_ID = as.factor(Student_ID),
AGE = as.integer(AGE)
)
# is.na(clean_data)
print(clean_student_data)
